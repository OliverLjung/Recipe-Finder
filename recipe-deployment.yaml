# Recipe finder
# --------------------
# - Deployment to launch one container of recipe finder app.
# 
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: worker-service
spec:
  type: ClusterIP
  selector:
    app: worker
  ports:
    - name: http
      port: 7000
      targetPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: database-service
spec:
  type: ClusterIP
  selector:
    app: database
  ports:
    - port: 6000
      targetPort: 6379
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-map
data:
  config.json: |
    {
        "frontend":{
            "worker_url":"http://worker-service:7000"
        },
        "worker":{
            "redis_url":"redis://database-service:6000",
            "redis_index":"recipes"
        }
    }
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: data-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /run/desktop/mnt/host/c/Users/ollie/OneDrive/Documents/GitHub/Recipe-Finder/shared_database/data/redis
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-pvc
spec:
  storageClassName: manual
  volumeName: data-pv
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: model-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /run/desktop/mnt/host/c/Users/ollie/OneDrive/Documents/GitHub/Recipe-Finder/worker/models
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pvc
spec:
  storageClassName: manual
  volumeName: model-pv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: localhost:5000/frontend-image:latest
          volumeMounts:
            - mountPath: /config
              name: config-volume
          ports:
            - containerPort: 80
      volumes:
        - name: config-volume
          configMap:
            name: config-map
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - name: worker
          image: localhost:5000/worker-image:latest
          volumeMounts:
            - mountPath: /config
              name: config-volume
            - mountPath: /models
              name: models-volume
          ports:
            - containerPort: 7000
      volumes:
        - name: config-volume
          configMap:
            name: config-map
        - name: models-volume
          persistentVolumeClaim:
            claimName: model-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: database
          image: redis/redis-stack:latest
          volumeMounts:
            - mountPath: /data
              name: data-volume
          ports:
            - containerPort: 6000
      volumes:
        - name: data-volume
          hostPath:
          persistentVolumeClaim:
            claimName: data-pvc